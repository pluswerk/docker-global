services:
  global-nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: ${RESTART:-unless-stopped}
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    environment:
      - HSTS=off
      - DEFAULT_HOST=searchforcompose.${TLD_DOMAIN:?needed}
      - TRUST_DOWNSTREAM_PROXY=true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./.docker/config/global-nginx-proxy/additional_nginx.conf:/etc/nginx/conf.d/additional_nginx.conf
      - ./.docker/data/global-nginx-proxy/searchforcompose.conf:/etc/nginx/conf.d/searchforcompose.conf
      - ./.docker/data/global-nginx-proxy/certs:/etc/nginx/certs:ro
      - ./.docker/data/global-nginx-proxy/dhparam:/etc/nginx/dhparam

    labels:
      - com.github.kanti.local_https.nginx_proxy=true

#  global-cloudflare-ddns:
#    image: oznu/cloudflare-ddns:latest
#    restart: ${RESTART:-unless-stopped}
#    environment:
#      - API_KEY=${DNS_CLOUDFLARE_API_TOKEN:?must be set}
#      - ZONE=${ZONE:?must be set}
#      - SUBDOMAIN=*.${SUBDOMAIN:?must be set}
#      - PROXIED=false
#      - CUSTOM_LOOKUP_CMD=${CUSTOM_LOOKUP_CMD:-echo '20.13.155.71'}

  global-vm-proxy:
    image: andersundsehr/vm-proxy-client
    restart: ${RESTART:-unless-stopped}
    volumes:
      - ~/.ssh:/home/user/.ssh
      - ./.docker/data/global-nginx-proxy/certs:/app/certs
    environment:
      - SSH_USER=root
      - SSH_HOST=20.13.155.71
      - SSH_PORT=221
      - REMOTE_PORT=70${VM_NUMBER:?must be set}
      - DEST_HOST=global-nginx-proxy
      - DEST_PORT=443
      - TLD_DOMAIN=${TLD_DOMAIN:?needed}

  global-db:
    image: mysql:5.7
    restart: ${RESTART:-unless-stopped}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - ./.docker/data/global-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-allowed-packet=16MB --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  global-db-v8:
    image: mysql:8.0
    restart: ${RESTART:-unless-stopped}
    ports:
      - "${DB_V8_PORT:-3308}:3306"
    volumes:
      - ./.docker/data/global-db-v8:/var/lib/mysql
      - ./mysql_native_password.sql:/docker-entrypoint-initdb.d/mysql_native_password.sql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    command: --disable-log-bin --init-file /docker-entrypoint-initdb.d/mysql_native_password.sql --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-allowed-packet=16MB --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  global-mail:
    image: axllent/mailpit
    restart: ${RESTART:-unless-stopped}
    ports:
      - "${SMTP_PORT:-1025}:1025"
    environment:
      - VIRTUAL_HOST=mail.${TLD_DOMAIN:?needed}
      - VIRTUAL_PORT=8025

  global-dozzle:
    image: amir20/dozzle:latest
    restart: ${RESTART:-unless-stopped}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - VIRTUAL_HOST=dozzle.${TLD_DOMAIN:?needed}
      - DOZZLE_NO_ANALYTICS=true
      - DOZZLE_ENABLE_ACTIONS=true

  global-letsencrypt:
    image: kanti/local-https
    network_mode: host
    restart: ${RESTART:-unless-stopped}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/data/global-letsencrypt:/etc/letsencrypt
      - ./.docker/data/global-nginx-proxy/certs:/etc/nginx/certs
      - /etc/hosts:/wsl-hosts-file/hosts
      - ./.docker/data/windows-hosts-file:/windows-hosts-file/
    environment:
      - DNS_CLOUDFLARE_API_TOKEN=${DNS_CLOUDFLARE_API_TOKEN:?must be set}
      - DDNS_INTERFACE=${DDNS_INTERFACE:-eth0}
      - HTTPS_MAIN_DOMAIN=${HTTPS_MAIN_DOMAIN:?must be set}
      - SENTRY_DSN=${SENTRY_DSN:?must be set}

  global-xhgui:
    image: edyan/xhgui
    restart: ${RESTART:-unless-stopped}
    environment:
      - VIRTUAL_HOST=xhgui.${TLD_DOMAIN:?needed}
    volumes:
    - ./.docker/data/global-xhgui:/data/db
    networks:
      - default

  global-chadburn:
    image: premoweb/chadburn:latest
    restart: ${RESTART:-unless-stopped}
    command: daemon
    volumes:
      - ./chadburn.conf:/etc/chadburn.conf
      - /var/run/docker.sock:/var/run/docker.sock:ro

  global-searchforcompose:
    image: andersundsehr/searchforcompose:latest
    restart: ${RESTART:-unless-stopped}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .docker/data/global-nginx-proxy/certs:/certs:ro
      - .docker/data/global-nginx-proxy/searchforcompose.conf:/searchforcompose.conf
    environment:
      - VIRTUAL_HOST=searchforcompose.${TLD_DOMAIN:?TLD_DOMAIN is required}
      - APPLICATION_UID=${APPLICATION_UID:-1000}
      - APPLICATION_GID=${APPLICATION_GID:-1000}

networks:
  default:
    name: global
    external: true
